{"version":3,"sources":["all.js"],"names":["API","data","fetch","then","response","json","error","console","log","lists","filteredLists","form","document","querySelector","input","resetBtn","searchInfo","info","order","type","table","advanceSort","currentType","undefined","currentOrder","currentSearch","typeSearched","isDescending","init","render","changeOrder","orderName","sort","a","b","createSearchInfo","dataType","dataOrder","dataNumber","showData","newTable","forEach","item","作物名稱","市場名稱","上價","中價","下價","平均價","交易量","innerHTML","length","reset","value","selected","resetOrderIcon","upBtns","querySelectorAll","btn","classList","add","nextElementSibling","remove","search","filter","match","addEventListener","e","preventDefault","trim","target","options","selectedIndex","text","種類代碼","orderType","nodeName","upBtn","parentNode","downBtn","innerText"],"mappings":"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","file":"all.js","sourcesContent":["\n//搜尋(currentSearch)、排序(currentOrder)、種類(currentType)之間的交叉搜尋\n//清除查詢按鈕 (resetBtn)\n//搜尋結果現況展示 (info)\n// 抓取資料上 - 採用原生語法 fetch。 Async / Await 做非同步處裡。\n\n// data\nconst API = 'https://hexschool.github.io/js-filter-data/data.json';\nlet data = fetch(API)\n            .then(response => response.json())\n            //.then(data => console.log(data))\n            .catch(error => console.log(error))\nlet lists = [];\nlet filteredLists = [];\n\n// DOM Element\nconst form = document.querySelector('[data-priceNet-form]'); //讀取文字的方式綁定\nconst input = document.querySelector('[data-priceNet-input]'); \nconst resetBtn = document.querySelector('[data-priceNet-reset]'); \nconst searchInfo = document.querySelector('[data-priceNet-searchInfo]'); \nconst info = document.querySelector('[data-priceNet-info]'); \nconst order = document.querySelector('[data-priceNet-order]'); \nconst type = document.querySelector('[data-priceNet-type]'); \nconst table = document.querySelector('[data-priceNet-table]'); //tbody\nconst advanceSort = document.querySelector('[data-priceNet-advanceSort]'); // table thead 標頭\n\n// State\nlet currentType = undefined;\nlet currentOrder = undefined;\nlet currentSearch = '';\nlet typeSearched = false;\nlet isDescending = false;\n\n// 初始化\nasync function init() {\n  lists = await data\n  filteredLists = lists\n  render()\n}\n\n// 排序\nfunction changeOrder(orderName, isDescending){\n  //依降序\n  if(isDescending){\n    filteredLists.sort((a, b) => b[orderName] - a[orderName])\n      currentOrder = `${orderName}降序`\n  }\n  //依升序\n  if(!isDescending){\n    currentOrder = `${orderName}升序`\n    filteredLists.sort((a, b) => a[orderName] - b[orderName])\n  }\n  render(filteredLists, currentType, currentOrder)  \n}\n\nfunction createSearchInfo(dataType, dataOrder, dataNumber){\n  if(!currentSearch){ currentSearch = '無搜尋';}  //當沒有內容(空字串)時再轉為布林值翻轉一次就會得到 true 的結果，有字串時才為false，會代入字串\n    return `\n    一共有<span class=\"\">${dataNumber}</span> 筆資料<br>(<span>${dataType} + ${dataOrder} + ${currentSearch}</span>)\n    `\n}\n\nfunction render(showData = lists, dataType=\"不分類\", dataOrder=\"無排序\"){\n// render\n  let newTable = [];\n  showData.forEach((item)=>{\n    newTable += `\n      <tr class=\"Table-hover\">\n        <td class=\"p-2\">${item.作物名稱}</td>\n        <td class=\"p-2\">${item.市場名稱}</td>\n        <td class=\"p-2\">${item.上價}</td>\n        <td class=\"p-2\">${item.中價}</td>\n        <td class=\"p-2\">${item.下價}</td>\n        <td class=\"p-2\">${item.平均價}</td>\n        <td class=\"p-2\">${item.交易量}</td>\n      </tr>\n    `\n  })\n//display\n  table.innerHTML = newTable;\n  searchInfo.innerHTML = createSearchInfo(dataType, dataOrder, showData.length);\n}\n\n//清除\nfunction reset(){\n  input.value = '';\n  type[0].selected = 'selected';\n  order[0].selected = 'selected';\n  currentType = undefined;\n  currentOrder = undefined;\n  currentSearch = '';\n  typeSearched = false;\n  filteredLists = lists;\n  resetOrderIcon();\n  isDescending = false;\n  render();\n}\n\n// 呼叫函式將所有畫面上的升降序按鈕返回初始值\nfunction resetOrderIcon(){\n  const upBtns = document.querySelectorAll('[data-priceNet-up]')\n  upBtns.forEach(btn =>{\n    btn.classList.add('sort--active');\n    btn.nextElementSibling.classList.remove('sort--active')\n  })\n}\n\n// 傳入值重新依if條件篩選出符合條件的內容，組合後回傳新陣列\nfunction search(){\n  filteredLists = filteredLists.filter((item) =>{\n    if(item.作物名稱 === null){\n      return false;\n    }else{\n      return item.作物名稱.match(input.value); //輸入值 必須和 item.作物名稱 一樣\n    }\n  })\n}  \n\ninit();\nrender();\n\n// Search lists by input\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  if(input.value.trim() === ''){\n    reset();\n    return;\n  }\n    currentSearch = input.value;\n    search();\n    render(filteredLists);\n  \n});\n\n\n\n// Active reset\nresetBtn.addEventListener('click', e => {\n  reset();\n})\n\n//Render selected order\norder.addEventListener('change', e => {\n  changeOrder(e.target.value);\n})\n\n// Render selected type\ntype.addEventListener('change', e => {\n  currentType = e.target.options[e.target.selectedIndex].text //Current selected option item's Text\n  if(e.target.value === 'none'){\n    filteredLists = lists\n    search();\n    render(filteredLists, undefined, currentOrder);\n    return;\n  }\n\n  if(currentSearch != '' && !typeSearched){\n    filteredLists = lists.filter((item) => item.種類代碼 === e.target.value)\n    typeSearched = true;\n  }\n\n  filteredLists = lists.filter((item) => item.種類代碼 === e.target.value)\n  if(typeSearched){ search()}\n  render(filteredLists, currentType, currentOrder)\n  \n})\n\n// thead\n// Asecending &Descending order toggler\n// 升序和降序切換器\nadvanceSort.addEventListener('click', e =>{\n  let orderType = '';\n  let orderName = '';\n  if(!(e.target.nodeName === 'LABEL')){ return }\n  const upBtn = e.target.parentNode.querySelector('[data-priceNet-up]');\n  const downBtn = e.target.parentNode.querySelector('[data-priceNet-down]');\n  // Already sort by descending 已經降序排列\n\n  isDescending = !isDescending;\n  orderName = e.target.parentNode.innerText;\n\n\n//Toggle icon appearance 切換圖標外觀\nresetOrderIcon();\nif(isDescending){\n  upBtn.classList.remove('sort--active');\n  downBtn.classList.add('sort--active');\n}else{\n  upBtn.classList.add('sort--active');\n  downBtn.classList.remove('sort--active');\n}\nchangeOrder(orderName, isDescending);\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Riceball 寫的\n\n// advanceSort.addEventListener(\"click\", e => {\n//   let orderType = \"\"\n//   let orderName = \"\"\n//   if (!(e.target.nodeName === \"LABEL\")) { return }\n//   const upBtn = e.target.parentNode.querySelector('[data-priceNet-up]')\n//   const downBtn = e.target.parentNode.querySelector('[data-priceNet-down]')\n//   // Already sort by descending\n\n\n\n//   isDescending = !isDescending\n//   orderName = e.target.parentNode.innerText\n  \n//   // Toggle icon appearance\n//   resetOrderIcon()\n//   if (isDescending) {\n//     upBtn.classList.remove('sort--active')\n//     downBtn.classList.add('sort--active')\n//   } else {\n//     upBtn.classList.add('sort--active')\n//     downBtn.classList.remove('sort--active')\n//   }\n//   changeOrder(orderName, isDescending)\n// })\n\n\n"]}