{"version":3,"sources":["all.js"],"names":["API","data","lists","filteredLists","form","document","querySelector","input","resetBtn","searchInfo","info","order","type","table","advanceSort","currentType","undefined","currentOrder","currentSearched","typeSearched","isDescending","getData","axios","get","then","response","filter","item","作物名稱","correctHomework","name","Promise","resolve","reject","console","log","setTimeout","score","Math","round","random","checkAward","init","studentA","rewardA"],"mappings":"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","file":"all.js","sourcesContent":["\n//搜尋(currentSearch)、排序(currentOrder)、種類(currentType)之間的交叉搜尋\n//清除查詢按鈕 (resetBtn)\n//搜尋結果現況展示 (info)\n\n// data\nconst API = 'https://hexschool.github.io/js-filter-data/data.json';\nlet data; \nlet lists = [];\nlet filteredLists = [];\n\n// DOM Element\nconst form = document.querySelector('[data-priceNet-form]'); //讀取文字的方式綁定\nconst input = document.querySelector('[data-priceNet-input]'); \nconst resetBtn = document.querySelector('[data-priceNet-reset]'); \nconst searchInfo = document.querySelector('[data-priceNet-searchInfo]'); \nconst info = document.querySelector('[data-priceNet-info]'); \nconst order = document.querySelector('[data-priceNet-order]'); \nconst type = document.querySelector('[data-priceNet-type]'); \nconst table = document.querySelector('[data-priceNet-table]'); \nconst advanceSort = document.querySelector('[data-priceNet-advanceSort]'); \n\n// State\nlet currentType = undefined;\nlet currentOrder = undefined;\nlet currentSearched = '';\nlet typeSearched = false;\nlet isDescending = false;\n\nfunction getData(){\n  axios.get(API)\n  .then(function(response){\n    data = response.data.filter(item => item.作物名稱);\n  });\n}\n\ngetData();\n\n// ---------------------學習 Promise Async Await----------\n\n\n\n// promise\n//批改作業\n\n// promise\n//批改作業\nfunction correctHomework(name){\n  return new Promise((resolve, reject) => {\n    console.log('目前正在批改作業中');\n    setTimeout(() => {\n      const score = Math.round(Math.random()*100); \n      if(score >= 20){\n        resolve(\n          {\n            name, \n            score\n          }\n        )\n      }else{\n        console.log(score)\n        reject(\"準備退學吧!!\")\n      }\n      \n    }, 1000)    \n  }) \n}\n\nfunction checkAward(data){\n  return new Promise((resolve, reject)=>{\n    console.log('正在檢查獎品中');\n    setTimeout(()=>{\n      if(data.score >= 90){\n          resolve(`${data.name}獲得電影票`)\n      }else if(data.score >= 60 && data.score < 90){\n        resolve(`${data.name}獲得嘉獎`)\n      }else{\n        console.log(data.score)\n        reject(`你沒有獎品，打手心10下`)\n      }\n      \n    }, 1000)\n  })\n}\n// correctHomework('小明')\n//   .then(data => checkAward(data))\n//   .then(reword => console.log(reword))\n//   .catch(error => console.log(error));\n\n// async 、 await 非同步的寫法\nconst init = async function(){\n  try{\n    const studentA = await correctHomework('小明');\n    // 過一秒後才執行下段語法\n    const rewardA = await checkAward(studentA);\n    console.log(rewardA);\n  }catch(error){\n    console.log(error);\n  }\n}\n\ninit();\n\n// const studentA = correctHomework('小明');\n// const rewardA = checkAward(studentA);\n\n\n\n"]}