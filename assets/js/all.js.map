{"version":3,"sources":["all.js"],"names":["API","data","fetch","then","response","OK","Error","statusText","json","error","console","log","lists","filteredLists","form","document","querySelector","input","resetBtn","searchInfo","info","order","type","table","advanceSort","currentType","undefined","currentOrder","currentSearched","typeSearched","isDescending","init","render","showData","dataType","dataOrder","newTable","forEach","item","作物名稱","市場名稱","上價","中價","下價","平均量","交易量","innerHTML","createSearchInfo","length"],"mappings":";;;+CACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA,IAAMA,GAAG,GAAG,sDAAsD;AAClE,IAAIC,IAAI,GAAGC,KAAK,CAACF,GAAG,CAAC,CACNG,IAAI,CAAC,UAACC,QAAQ,EAAK;EAClB,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAE,MAAMC,KAAK,CAACF,QAAQ,CAACG,UAAU,CAAC;EAC/C,OAAOH,QAAQ,CAACI,IAAI,EAAE;AAC1B,CAAC,CAAC,SACI,CAAC,UAAAC,KAAK;EAAA,OAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;AAAA,EAAC;AACjD,IAAIG,KAAK,GAAG,EAAE;AACd,IAAIC,aAAa,GAAG,EAAE;;AAEtB;AACA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;AAC7D,IAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;AAC7D,IAAME,QAAQ,GAAGH,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;AAChE,IAAMG,UAAU,GAAGJ,QAAQ,CAACC,aAAa,CAAC,4BAA4B,CAAC;AACvE,IAAMI,IAAI,GAAGL,QAAQ,CAACC,aAAa,CAAC,sBAAsB,CAAC;AAC3D,IAAMK,KAAK,GAAGN,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;AAC7D,IAAMM,IAAI,GAAGP,QAAQ,CAACC,aAAa,CAAC,sBAAsB,CAAC;AAC3D,IAAMO,KAAK,GAAGR,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;AAC7D,IAAMQ,WAAW,GAAGT,QAAQ,CAACC,aAAa,CAAC,6BAA6B,CAAC;;AAEzE;AACA,IAAIS,WAAW,GAAGC,SAAS;AAC3B,IAAIC,YAAY,GAAGD,SAAS;AAC5B,IAAIE,eAAe,GAAG,EAAE;AACxB,IAAIC,YAAY,GAAG,KAAK;AACxB,IAAIC,YAAY,GAAG,KAAK;;AAExB;AAAA,SACeC,IAAI;EAAA;AAAA;AAAA;EAAA,mEAAnB;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACgB9B,IAAI;UAAA;YAAlBW,KAAK;YACLC,aAAa,GAAGD,KAAK;YACrBoB,MAAM,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACT;EAAA;AAAA;AAED,SAASA,MAAM,GAAmD;EAAA,IAAlDC,QAAQ,uEAAGrB,KAAK;EAAA,IAAEsB,QAAQ,uEAAC,KAAK;EAAA,IAAEC,SAAS,uEAAC,KAAK;EACjE;EACE,IAAIC,QAAQ,GAAG,EAAE;EACjBH,QAAQ,CAACI,OAAO,CAAC,UAACC,IAAI,EAAG;IACvBF,QAAQ,iEAEcE,IAAI,CAACC,IAAI,8CACTD,IAAI,CAACE,IAAI,8CACTF,IAAI,CAACG,EAAE,8CACPH,IAAI,CAACI,EAAE,8CACPJ,IAAI,CAACK,EAAE,8CACPL,IAAI,CAACM,GAAG,8CACRN,IAAI,CAACO,GAAG,6BAE7B;EACH,CAAC,CAAC;EACF;EACAtB,KAAK,CAACuB,SAAS,GAAGV,QAAQ;EAC1BjB,UAAU,CAAC2B,SAAS,GAAGC,gBAAgB,CAACb,QAAQ,EAAEC,SAAS,EAAEF,QAAQ,CAACe,MAAM,CAAC;AAE/E;AAEAjB,IAAI,EAAE;AACNC,MAAM,EAAE","file":"all.js","sourcesContent":["\n//搜尋(currentSearch)、排序(currentOrder)、種類(currentType)之間的交叉搜尋\n//清除查詢按鈕 (resetBtn)\n//搜尋結果現況展示 (info)\n// 抓取資料上 - 採用原生語法 fetch。 Async / Await 做非同步處裡。\n\n// data\nconst API = 'https://hexschool.github.io/js-filter-data/data.json';\nlet data = fetch(API)\n              .then((response) => {\n                if(!response.OK) throw Error(response.statusText)\n                  return response.json()\n              })\n              .catch(error => console.log(error))\nlet lists = [];\nlet filteredLists = [];\n\n// DOM Element\nconst form = document.querySelector('[data-priceNet-form]'); //讀取文字的方式綁定\nconst input = document.querySelector('[data-priceNet-input]'); \nconst resetBtn = document.querySelector('[data-priceNet-reset]'); \nconst searchInfo = document.querySelector('[data-priceNet-searchInfo]'); \nconst info = document.querySelector('[data-priceNet-info]'); \nconst order = document.querySelector('[data-priceNet-order]'); \nconst type = document.querySelector('[data-priceNet-type]'); \nconst table = document.querySelector('[data-priceNet-table]'); \nconst advanceSort = document.querySelector('[data-priceNet-advanceSort]'); \n\n// State\nlet currentType = undefined;\nlet currentOrder = undefined;\nlet currentSearched = '';\nlet typeSearched = false;\nlet isDescending = false;\n\n// 初始化\nasync function init(){\n  lists = await data\n  filteredLists = lists\n  render()\n}\n\nfunction render(showData = lists, dataType=\"不分類\", dataOrder=\"無排序\"){\n// render\n  let newTable = [];\n  showData.forEach((item)=>{\n    newTable += `\n      <tr class=\"\">\n        <td class=\"p-2\">${item.作物名稱}</td>\n        <td class=\"p-2\">${item.市場名稱}</td>\n        <td class=\"p-2\">${item.上價}</td>\n        <td class=\"p-2\">${item.中價}</td>\n        <td class=\"p-2\">${item.下價}</td>\n        <td class=\"p-2\">${item.平均量}</td>\n        <td class=\"p-2\">${item.交易量}</td>\n      </tr>\n    `\n  })\n  // display\n  table.innerHTML = newTable;\n  searchInfo.innerHTML = createSearchInfo(dataType, dataOrder, showData.length);\n\n}\n\ninit();\nrender();"]}