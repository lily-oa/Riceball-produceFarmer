{"version":3,"sources":["all.js"],"names":["API","data","lists","filteredLists","form","document","querySelector","input","resetBtn","searchInfo","info","order","type","table","advanceSort","currentType","undefined","currentOrder","currentSearched","typeSearched","isDescending","getData","axios","get","then","response","filter","item","作物名稱","correctHomework","name","Promise","resolve","reject","console","log","setTimeout","score","Math","round","random","checkAward","init","studentA","rewardA"],"mappings":"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","file":"all.js","sourcesContent":["import \"regenerator-runtime/runtime\";\nimport \"core-js/stable\";\n\n//搜尋(currentSearch)、排序(currentOrder)、種類(currentType)之間的交叉搜尋\n//清除查詢按鈕 (resetBtn)\n//搜尋結果現況展示 (info)\n\n// data\nconst API = 'https://hexschool.github.io/js-filter-data/data.json';\nlet data; \nlet lists = [];\nlet filteredLists = [];\n\n// DOM Element\nconst form = document.querySelector('[data-priceNet-form]'); //讀取文字的方式綁定\nconst input = document.querySelector('[data-priceNet-input]'); \nconst resetBtn = document.querySelector('[data-priceNet-reset]'); \nconst searchInfo = document.querySelector('[data-priceNet-searchInfo]'); \nconst info = document.querySelector('[data-priceNet-info]'); \nconst order = document.querySelector('[data-priceNet-order]'); \nconst type = document.querySelector('[data-priceNet-type]'); \nconst table = document.querySelector('[data-priceNet-table]'); \nconst advanceSort = document.querySelector('[data-priceNet-advanceSort]'); \n\n// State\nlet currentType = undefined;\nlet currentOrder = undefined;\nlet currentSearched = '';\nlet typeSearched = false;\nlet isDescending = false;\n\nfunction getData(){\n  axios.get(API)\n  .then(function(response){\n    data = response.data.filter(item => item.作物名稱);\n  });\n}\n\ngetData();\n\n// ---------------------學習 Promise Async Await----------\n\n\n\n// promise\n//批改作業\n\n// promise\n//批改作業\nfunction correctHomework(name){\n  return new Promise((resolve, reject) => {\n    console.log('目前正在批改作業中');\n    setTimeout(() => {\n      const score = Math.round(Math.random()*100); \n      if(score >= 20){\n        resolve(\n          {\n            name, \n            score\n          }\n        )\n      }else{\n        console.log(score)\n        reject(\"準備退學吧!!\")\n      }\n      \n    }, 1000)    \n  }) \n}\n\nfunction checkAward(data){\n  return new Promise((resolve, reject)=>{\n    console.log('正在檢查獎品中');\n    setTimeout(()=>{\n      if(data.score >= 90){\n          resolve(`${data.name}獲得電影票`)\n      }else if(data.score >= 60 && data.score < 90){\n        resolve(`${data.name}獲得嘉獎`)\n      }else{\n        console.log(data.score)\n        reject(`你沒有獎品，打手心10下`)\n      }\n      \n    }, 1000)\n  })\n}\n// correctHomework('小明')\n//   .then(data => checkAward(data))\n//   .then(reword => console.log(reword))\n//   .catch(error => console.log(error));\n\n// async 、 await 非同步的寫法\nconst init = async function(){\n  try{\n    const studentA = await correctHomework('小明');\n    // 過一秒後才執行下段語法\n    const rewardA = await checkAward(studentA);\n    console.log(rewardA);\n  }catch(error){\n    console.log(error);\n  }\n}\n\ninit();\n\n// const studentA = correctHomework('小明');\n// const rewardA = checkAward(studentA);\n\n\n\n"]}